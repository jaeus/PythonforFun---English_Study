import pandas as pds
import random as rd
import time

worddata = pds.read_csv('IELTS WORDS study.csv')
rfnddt = worddata.fillna(value=' ').copy()



def typedesignator(definput):
    try:
        result = int(definput)
    except ValueError:
        result = str(definput)
    return(result)


def ttsonoff():
    while 1:
        deftts = input('Type [O] to turn on TTS / Type [X] to do without TTS : ')
        if deftts == 'O':
            print('TTS is on')
            pronouncerinitializing()
            break
        elif deftts == 'X':
            print('TTS is off')
            break
        else:
            print('Enter either O or X')
    return(deftts)


def howmanygames():
    while 1:
        gamefreq = typedesignator(input('Enter a number to set the maximum try for one word : '))
        if type(gamefreq) == int:
            if gamefreq <= 0:
                print('THE NUMBER MUST BE BIGGER THAN 1')
            else:
                break
        else:
            print('ENTER A PROPER NUMBER')
    return(gamefreq)


def preprintedcheck(dfdata, old):
    newno = rownumbergenerator(dfdata, old)
    old.append(newno)
    return(newno, old)


def rownumbergenerator(dfdata, preanswer):
    while 1:
        no = rd.randrange(0,len(dfdata),1)
        sameornot = 0
        for i in preanswer:
            if no == i:
                sameornot = 1
        if sameornot == 0:
            break
    return(no)


def definitionprint(dfdata, i):
    no = 1
    for ii in range(3, 10, 3):
        if dfdata.loc[i][ii] != ' ':
            print('DEFINITION #%s' %(no), ':', dfdata.loc[i][ii])
            no += 1
    return()


def savedwordsprint(dfdata, typedword, wordlist):
    if len(wordlist) != 0:
        sortedlist = sorted(wordlist)
        print('THE NUMBER OF THE WORDS YOU SAVED : %s' %(sortedlist))
        for no in sortedlist:
            print(dfdata.loc[no][0])
    return()


def answercheck(dfdata, typedword, i, deftts):
    checking = ''
    if typedword == dfdata.loc[i][0]:
        if deftts == 'O':
            playthefile()
        checking = 'correct'
        
        if dfdata.loc[i][2] != ' ':
            print(dfdata.loc[i][0],
                  '(%s) / %s' %(dfdata.loc[i][1], dfdata.loc[i][2]))
        else:
            print(dfdata.loc[i][0], '(%s)' %(dfdata.loc[i][1]))
        for ii in range(5, 12, 3):
            if dfdata.loc[i][ii] != ' ':
                print(dfdata.loc[i][ii])
    return(checking)



def exampletyping(dfdata, i, deftts, gamemode):
    no = 1
    for ii in range(4, 11, 3):
        if dfdata.loc[i][ii] != ' ':
            if deftts == 'O':
                speakingpreparation(dfdata.loc[i][ii], 's')
            print('EXAMPLE #%s' %(no), ':', dfdata.loc[i][ii])
            if deftts == 'O':
                playthefile()
            no += 1
            if gamemode == '1':
                while 1:
                    typeanswer = input()
                    if typeanswer == dfdata.loc[i][ii]:
                        break
                    elif typeanswer == 'n':
                        break
                    elif typeanswer == 'iquit':
                        break
    return()


def wordslist(dfdata, i):
    pick5 = rd.sample(range(0,len(dfdata)),5)
    pick5[rd.randrange(0,5,1)] = i
    
    print(dfdata.loc[pick5[0]][0], "   ", dfdata.loc[pick5[1]][0], "   ",
          dfdata.loc[pick5[2]][0], "   ", dfdata.loc[pick5[3]][0], "   ",
          dfdata.loc[pick5[4]][0])
    return()



#TTS part
def pronouncerinitializing():
    from gtts import gTTS
    from pygame import mixer
    return()


def speakingpreparation(stuff, speed):
    #speaking speed, slower one is too weird to hear 
    if speed == 's':
        speakingspeed = False
    else:
        speakingspeed = False
    tts = gTTS(text = stuff, lang = 'en', slow = False)
    tts.save('IVP.mp3')
    return()


def playthefile():
    mixer.init()
    mixer.music.load('IVP.mp3')
    mixer.music.play()
    return()
    
    
    
    
    
answer = ''
answeratonce = []
printedbefore = []
savedwords = []
while answer != 'end':
    print('\nCHOOSE A MODE\n1-Assume the answer from definitions of the word')
    print('2-Study each word and mark for later')
    print('3-Type words for definitions and example sentences')
    print('4-Find the row number of the words')
    
    selectmode = 0
    while 1:
        time.sleep(0.3)
        if selectmode == '1' or selectmode == '2' or selectmode == '3' or selectmode == '4':
            break
        elif selectmode == 'end':
            answer = 'end'
            break
        else:
            selectmode = input('\nEnter 1 or 2 or 3 or 4 : ')
            
    if selectmode == '1':
        ttsswitch = ttsonoff()
        trylimit = howmanygames()

        print("\nType 'something' as 'STH', 'someone' as 'SO', 'somebody' as 'SBD'\n")
        while answer != 'end':
            i = rownumbergenerator(rfnddt, answeratonce)
            definitionprint(rfnddt, i)
            if ttsswitch == 'O':
                speakingpreparation(rfnddt.loc[i][0], 'w')

            answercompare = ''
            trycount = 0
            hint = ''
            while trycount < trylimit:
                trycount += 1
                answer = input()
                answercompare = answercheck(rfnddt, answer, i, ttsswitch)
                if answer == 'end' or answer == 'iquit':
                    break
                if answercompare == 'correct':
                    exampletyping(rfnddt, i, ttsswitch, selectmode)
                    if trycount == 1:
                        answeratonce.append(i)
                    trycount = trylimit
                    print('\n')
                if trycount >= trylimit/2 and hint != 'did':
                    wordslist(rfnddt,i)
                    hint = 'did'
            if answer != 'iquit' and answer != 'end':
                if answercompare != 'correct':
                    print("It's '", rfnddt.loc[i][0],"'.\n")
                    
                    
    elif selectmode == '2':
        ttsswitch = ttsonoff()
        
        print("Type [a] to add word to review later / Enter none or other keys to read definitions and next words\n")
        while 1:
            i = preprintedcheck(rfnddt, printedbefore)[0]
            print(rfnddt.loc[i][0])
            answer = input()
            if answer == 'end':
                savedwordsprint(rfnddt, answer, savedwords)
                break
            elif answer == 'a':
                savedwords.append(i)
            definitionprint(rfnddt,i)
            exampletyping(rfnddt, i, ttsswitch, selectmode)
            print('\n')
            
            
    elif selectmode == '3':
        ttsswitch = ttsonoff()
        
        while answer != 'end':
            wordonthelist = 'X'
            answer = input('Type the word you want to check : ')
            if answer != 'end':
                for i in range(len(rfnddt)):
                    if answer == rfnddt.loc[i][0]:
                        wordonthelist ='O'
                        if rfnddt.loc[i][2] != ' ':
                            print('(%s) / %s' %(rfnddt.loc[i][1], rfnddt.loc[i][2]))
                        else:
                            print('(%s)' %(rfnddt.loc[i][1])) 
                        definitionprint(rfnddt, i)
                        exampletyping(rfnddt, i, ttsswitch, selectmode)
                        print('\n')
            else:
                break
            if wordonthelist == 'X':
                print('NOT ON THE LIST')
                
                
    elif selectmode == '4':
        ttsswitch = ttsonoff()
        
        while answer != 'end':
            answer = input('Type the word you want to find out the row number : ')
            
            checkexistence = 'X'
            for i in range(len(rfnddt)):
                if answer == rfnddt.loc[i][0]:
                    print('THE WORD IS AT "%s"\n' %(i+2))
                    checkexistence = 'O'
            if answer != 'end':
                if checkexistence == 'X':
                    print('NOT ON THE LIST')
